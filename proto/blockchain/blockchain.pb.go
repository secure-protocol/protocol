// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: blockchain.proto

package blockchain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountType int32

const (
	AccountType_Tron AccountType = 0
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "Tron",
	}
	AccountType_value = map[string]int32{
		"Tron": 0,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_proto_enumTypes[0].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_blockchain_proto_enumTypes[0]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{0}
}

// 操作枚举
type APIEnum int32

const (
	// todo
	APIEnum_SendTx APIEnum = 0
)

// Enum value maps for APIEnum.
var (
	APIEnum_name = map[int32]string{
		0: "SendTx",
	}
	APIEnum_value = map[string]int32{
		"SendTx": 0,
	}
)

func (x APIEnum) Enum() *APIEnum {
	p := new(APIEnum)
	*p = x
	return p
}

func (x APIEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APIEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_proto_enumTypes[1].Descriptor()
}

func (APIEnum) Type() protoreflect.EnumType {
	return &file_blockchain_proto_enumTypes[1]
}

func (x APIEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APIEnum.Descriptor instead.
func (APIEnum) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{1}
}

type BlockchainNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                 uint64      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                           // 网络唯一id
	Key                 string      `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                            // 网络唯一key
	Name                string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          // 网络名
	ChainID             string      `protobuf:"bytes,4,opt,name=chainID,proto3" json:"chainID,omitempty"`                                    // chainID
	AccountKey          AccountType `protobuf:"varint,5,opt,name=accountKey,proto3,enum=blockchain.AccountType" json:"accountKey,omitempty"` // 网络账号类型
	Decimal             uint64      `protobuf:"varint,6,opt,name=decimal,proto3" json:"decimal,omitempty"`                                   // 原生币精度
	DisplayDecimal      uint64      `protobuf:"varint,7,opt,name=displayDecimal,proto3" json:"displayDecimal,omitempty"`                     // 原生币展示精度
	Logo                string      `protobuf:"bytes,8,opt,name=logo,proto3" json:"logo,omitempty"`                                          // logo
	Symbol              string      `protobuf:"bytes,9,opt,name=symbol,proto3" json:"symbol,omitempty"`                                      // 原生币名
	FullSymbol          string      `protobuf:"bytes,10,opt,name=fullSymbol,proto3" json:"fullSymbol,omitempty"`                             // 原生币全名
	ArchType            string      `protobuf:"bytes,11,opt,name=archType,proto3" json:"archType,omitempty"`                                 //  技术底层evm，cosmos。。。
	RpcURL              []string    `protobuf:"bytes,12,rep,name=rpcURL,proto3" json:"rpcURL,omitempty"`                                     // rpc url
	ConfirmStrategy     uint64      `protobuf:"varint,13,opt,name=confirmStrategy,proto3" json:"confirmStrategy,omitempty"`                  // 确认策略
	BlockGenerationRate uint64      `protobuf:"varint,14,opt,name=blockGenerationRate,proto3" json:"blockGenerationRate,omitempty"`          // 出块时间
	ScanURL             string      `protobuf:"bytes,15,opt,name=scanURL,proto3" json:"scanURL,omitempty"`                                   //浏览器地址
}

func (x *BlockchainNetwork) Reset() {
	*x = BlockchainNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainNetwork) ProtoMessage() {}

func (x *BlockchainNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainNetwork.ProtoReflect.Descriptor instead.
func (*BlockchainNetwork) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainNetwork) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BlockchainNetwork) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BlockchainNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockchainNetwork) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *BlockchainNetwork) GetAccountKey() AccountType {
	if x != nil {
		return x.AccountKey
	}
	return AccountType_Tron
}

func (x *BlockchainNetwork) GetDecimal() uint64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *BlockchainNetwork) GetDisplayDecimal() uint64 {
	if x != nil {
		return x.DisplayDecimal
	}
	return 0
}

func (x *BlockchainNetwork) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BlockchainNetwork) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BlockchainNetwork) GetFullSymbol() string {
	if x != nil {
		return x.FullSymbol
	}
	return ""
}

func (x *BlockchainNetwork) GetArchType() string {
	if x != nil {
		return x.ArchType
	}
	return ""
}

func (x *BlockchainNetwork) GetRpcURL() []string {
	if x != nil {
		return x.RpcURL
	}
	return nil
}

func (x *BlockchainNetwork) GetConfirmStrategy() uint64 {
	if x != nil {
		return x.ConfirmStrategy
	}
	return 0
}

func (x *BlockchainNetwork) GetBlockGenerationRate() uint64 {
	if x != nil {
		return x.BlockGenerationRate
	}
	return 0
}

func (x *BlockchainNetwork) GetScanURL() string {
	if x != nil {
		return x.ScanURL
	}
	return ""
}

type GenAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountType AccountType `protobuf:"varint,1,opt,name=accountType,proto3,enum=blockchain.AccountType" json:"accountType,omitempty"`
	Bid         string      `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Nums        int64       `protobuf:"varint,3,opt,name=nums,proto3" json:"nums,omitempty"`
}

func (x *GenAddressReq) Reset() {
	*x = GenAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenAddressReq) ProtoMessage() {}

func (x *GenAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenAddressReq.ProtoReflect.Descriptor instead.
func (*GenAddressReq) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{1}
}

func (x *GenAddressReq) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_Tron
}

func (x *GenAddressReq) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *GenAddressReq) GetNums() int64 {
	if x != nil {
		return x.Nums
	}
	return 0
}

type GenAddressRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *GenAddressRes) Reset() {
	*x = GenAddressRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenAddressRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenAddressRes) ProtoMessage() {}

func (x *GenAddressRes) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenAddressRes.ProtoReflect.Descriptor instead.
func (*GenAddressRes) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{2}
}

func (x *GenAddressRes) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_blockchain_proto protoreflect.FileDescriptor

var file_blockchain_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xd6,
	0x03, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x70, 0x63,
	0x55, 0x52, 0x4c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x52,
	0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x61, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x63, 0x61, 0x6e, 0x55, 0x52, 0x4c, 0x22, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x2a, 0x17, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x72, 0x6f, 0x6e, 0x10, 0x00, 0x2a, 0x15, 0x0a,
	0x07, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x78, 0x10, 0x00, 0x32, 0x58, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_proto_rawDescOnce sync.Once
	file_blockchain_proto_rawDescData = file_blockchain_proto_rawDesc
)

func file_blockchain_proto_rawDescGZIP() []byte {
	file_blockchain_proto_rawDescOnce.Do(func() {
		file_blockchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_proto_rawDescData)
	})
	return file_blockchain_proto_rawDescData
}

var file_blockchain_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blockchain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_blockchain_proto_goTypes = []any{
	(AccountType)(0),          // 0: blockchain.AccountType
	(APIEnum)(0),              // 1: blockchain.APIEnum
	(*BlockchainNetwork)(nil), // 2: blockchain.BlockchainNetwork
	(*GenAddressReq)(nil),     // 3: blockchain.GenAddressReq
	(*GenAddressRes)(nil),     // 4: blockchain.GenAddressRes
}
var file_blockchain_proto_depIdxs = []int32{
	0, // 0: blockchain.BlockchainNetwork.accountKey:type_name -> blockchain.AccountType
	0, // 1: blockchain.GenAddressReq.accountType:type_name -> blockchain.AccountType
	3, // 2: blockchain.BlockchainServer.GenAddress:input_type -> blockchain.GenAddressReq
	4, // 3: blockchain.BlockchainServer.GenAddress:output_type -> blockchain.GenAddressRes
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blockchain_proto_init() }
func file_blockchain_proto_init() {
	if File_blockchain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockchain_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BlockchainNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GenAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GenAddressRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockchain_proto_goTypes,
		DependencyIndexes: file_blockchain_proto_depIdxs,
		EnumInfos:         file_blockchain_proto_enumTypes,
		MessageInfos:      file_blockchain_proto_msgTypes,
	}.Build()
	File_blockchain_proto = out.File
	file_blockchain_proto_rawDesc = nil
	file_blockchain_proto_goTypes = nil
	file_blockchain_proto_depIdxs = nil
}
