// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: blockchain.proto

package blockchain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountType int32

const (
	AccountType_Tron AccountType = 0
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "Tron",
	}
	AccountType_value = map[string]int32{
		"Tron": 0,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_proto_enumTypes[0].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_blockchain_proto_enumTypes[0]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{0}
}

// 操作枚举
type APIEnum int32

const (
	// todo
	APIEnum_SendTx APIEnum = 0
)

// Enum value maps for APIEnum.
var (
	APIEnum_name = map[int32]string{
		0: "SendTx",
	}
	APIEnum_value = map[string]int32{
		"SendTx": 0,
	}
)

func (x APIEnum) Enum() *APIEnum {
	p := new(APIEnum)
	*p = x
	return p
}

func (x APIEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APIEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_proto_enumTypes[1].Descriptor()
}

func (APIEnum) Type() protoreflect.EnumType {
	return &file_blockchain_proto_enumTypes[1]
}

func (x APIEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APIEnum.Descriptor instead.
func (APIEnum) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{1}
}

type AddressType int32

const (
	AddressType_receive AddressType = 0
	AddressType_gather  AddressType = 1
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "receive",
		1: "gather",
	}
	AddressType_value = map[string]int32{
		"receive": 0,
		"gather":  1,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_proto_enumTypes[2].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_blockchain_proto_enumTypes[2]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{2}
}

type BlockchainNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                 uint64      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                           // 网络唯一id
	Key                 string      `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                            // 网络唯一key
	Name                string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          // 网络名
	ChainID             string      `protobuf:"bytes,4,opt,name=chainID,proto3" json:"chainID,omitempty"`                                    // chainID
	AccountKey          AccountType `protobuf:"varint,5,opt,name=accountKey,proto3,enum=blockchain.AccountType" json:"accountKey,omitempty"` // 网络账号类型
	Decimal             uint64      `protobuf:"varint,6,opt,name=decimal,proto3" json:"decimal,omitempty"`                                   // 原生币精度
	DisplayDecimal      uint64      `protobuf:"varint,7,opt,name=displayDecimal,proto3" json:"displayDecimal,omitempty"`                     // 原生币展示精度
	Logo                string      `protobuf:"bytes,8,opt,name=logo,proto3" json:"logo,omitempty"`                                          // logo
	Symbol              string      `protobuf:"bytes,9,opt,name=symbol,proto3" json:"symbol,omitempty"`                                      // 原生币名
	FullSymbol          string      `protobuf:"bytes,10,opt,name=fullSymbol,proto3" json:"fullSymbol,omitempty"`                             // 原生币全名
	ArchType            string      `protobuf:"bytes,11,opt,name=archType,proto3" json:"archType,omitempty"`                                 //  技术底层evm，cosmos。。。
	RpcURL              []string    `protobuf:"bytes,12,rep,name=rpcURL,proto3" json:"rpcURL,omitempty"`                                     // rpc url
	ConfirmStrategy     uint64      `protobuf:"varint,13,opt,name=confirmStrategy,proto3" json:"confirmStrategy,omitempty"`                  // 确认策略
	BlockGenerationRate uint64      `protobuf:"varint,14,opt,name=blockGenerationRate,proto3" json:"blockGenerationRate,omitempty"`          // 出块时间
	ScanURL             string      `protobuf:"bytes,15,opt,name=scanURL,proto3" json:"scanURL,omitempty"`                                   //浏览器地址
}

func (x *BlockchainNetwork) Reset() {
	*x = BlockchainNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainNetwork) ProtoMessage() {}

func (x *BlockchainNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainNetwork.ProtoReflect.Descriptor instead.
func (*BlockchainNetwork) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainNetwork) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BlockchainNetwork) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BlockchainNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockchainNetwork) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *BlockchainNetwork) GetAccountKey() AccountType {
	if x != nil {
		return x.AccountKey
	}
	return AccountType_Tron
}

func (x *BlockchainNetwork) GetDecimal() uint64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *BlockchainNetwork) GetDisplayDecimal() uint64 {
	if x != nil {
		return x.DisplayDecimal
	}
	return 0
}

func (x *BlockchainNetwork) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BlockchainNetwork) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BlockchainNetwork) GetFullSymbol() string {
	if x != nil {
		return x.FullSymbol
	}
	return ""
}

func (x *BlockchainNetwork) GetArchType() string {
	if x != nil {
		return x.ArchType
	}
	return ""
}

func (x *BlockchainNetwork) GetRpcURL() []string {
	if x != nil {
		return x.RpcURL
	}
	return nil
}

func (x *BlockchainNetwork) GetConfirmStrategy() uint64 {
	if x != nil {
		return x.ConfirmStrategy
	}
	return 0
}

func (x *BlockchainNetwork) GetBlockGenerationRate() uint64 {
	if x != nil {
		return x.BlockGenerationRate
	}
	return 0
}

func (x *BlockchainNetwork) GetScanURL() string {
	if x != nil {
		return x.ScanURL
	}
	return ""
}

type GenAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountType AccountType `protobuf:"varint,1,opt,name=accountType,proto3,enum=blockchain.AccountType" json:"accountType,omitempty"`
	AddressType AddressType `protobuf:"varint,2,opt,name=addressType,proto3,enum=blockchain.AddressType" json:"addressType,omitempty"`
	Bid         string      `protobuf:"bytes,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Nums        int64       `protobuf:"varint,4,opt,name=nums,proto3" json:"nums,omitempty"`
	WithUSDT    bool        `protobuf:"varint,5,opt,name=withUSDT,proto3" json:"withUSDT,omitempty"`
	NetworkKey  string      `protobuf:"bytes,6,opt,name=networkKey,proto3" json:"networkKey,omitempty"`
}

func (x *GenAddressReq) Reset() {
	*x = GenAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenAddressReq) ProtoMessage() {}

func (x *GenAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenAddressReq.ProtoReflect.Descriptor instead.
func (*GenAddressReq) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{1}
}

func (x *GenAddressReq) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_Tron
}

func (x *GenAddressReq) GetAddressType() AddressType {
	if x != nil {
		return x.AddressType
	}
	return AddressType_receive
}

func (x *GenAddressReq) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *GenAddressReq) GetNums() int64 {
	if x != nil {
		return x.Nums
	}
	return 0
}

func (x *GenAddressReq) GetWithUSDT() bool {
	if x != nil {
		return x.WithUSDT
	}
	return false
}

func (x *GenAddressReq) GetNetworkKey() string {
	if x != nil {
		return x.NetworkKey
	}
	return ""
}

type GenAddressRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *GenAddressRes) Reset() {
	*x = GenAddressRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenAddressRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenAddressRes) ProtoMessage() {}

func (x *GenAddressRes) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenAddressRes.ProtoReflect.Descriptor instead.
func (*GenAddressRes) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{2}
}

func (x *GenAddressRes) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type SendToReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkKey   string `protobuf:"bytes,1,opt,name=networkKey,proto3" json:"networkKey,omitempty"`
	TokenID      uint64 `protobuf:"varint,2,opt,name=tokenID,proto3" json:"tokenID,omitempty"`
	Send         string `protobuf:"bytes,3,opt,name=send,proto3" json:"send,omitempty"`
	Receive      string `protobuf:"bytes,4,opt,name=receive,proto3" json:"receive,omitempty"`
	Amount       uint64 `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	IsOut        bool   `protobuf:"varint,6,opt,name=isOut,proto3" json:"isOut,omitempty"` // to 是否为外部地址
	BusinessType string `protobuf:"bytes,7,opt,name=businessType,proto3" json:"businessType,omitempty"`
	ForceSend    bool   `protobuf:"varint,8,opt,name=forceSend,proto3" json:"forceSend,omitempty"` // 是否强制发送
}

func (x *SendToReq) Reset() {
	*x = SendToReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToReq) ProtoMessage() {}

func (x *SendToReq) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToReq.ProtoReflect.Descriptor instead.
func (*SendToReq) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{3}
}

func (x *SendToReq) GetNetworkKey() string {
	if x != nil {
		return x.NetworkKey
	}
	return ""
}

func (x *SendToReq) GetTokenID() uint64 {
	if x != nil {
		return x.TokenID
	}
	return 0
}

func (x *SendToReq) GetSend() string {
	if x != nil {
		return x.Send
	}
	return ""
}

func (x *SendToReq) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *SendToReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendToReq) GetIsOut() bool {
	if x != nil {
		return x.IsOut
	}
	return false
}

func (x *SendToReq) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *SendToReq) GetForceSend() bool {
	if x != nil {
		return x.ForceSend
	}
	return false
}

type SendToRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *SendToRes) Reset() {
	*x = SendToRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToRes) ProtoMessage() {}

func (x *SendToRes) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToRes.ProtoReflect.Descriptor instead.
func (*SendToRes) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{4}
}

func (x *SendToRes) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type AccountType `protobuf:"varint,1,opt,name=type,proto3,enum=blockchain.AccountType" json:"type,omitempty"`
	Bid  string      `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Addr string      `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{5}
}

func (x *Address) GetType() AccountType {
	if x != nil {
		return x.Type
	}
	return AccountType_Tron
}

func (x *Address) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Address) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type ImportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid                 string      `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	AccountType         AccountType `protobuf:"varint,2,opt,name=accountType,proto3,enum=blockchain.AccountType" json:"accountType,omitempty"`
	EncryptedPrivateKey []byte      `protobuf:"bytes,3,opt,name=EncryptedPrivateKey,proto3" json:"EncryptedPrivateKey,omitempty"`
	EncryptedBy         *Address    `protobuf:"bytes,4,opt,name=EncryptedBy,proto3" json:"EncryptedBy,omitempty"`
}

func (x *ImportReq) Reset() {
	*x = ImportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportReq) ProtoMessage() {}

func (x *ImportReq) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportReq.ProtoReflect.Descriptor instead.
func (*ImportReq) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{6}
}

func (x *ImportReq) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *ImportReq) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_Tron
}

func (x *ImportReq) GetEncryptedPrivateKey() []byte {
	if x != nil {
		return x.EncryptedPrivateKey
	}
	return nil
}

func (x *ImportReq) GetEncryptedBy() *Address {
	if x != nil {
		return x.EncryptedBy
	}
	return nil
}

type ImportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ImportRes) Reset() {
	*x = ImportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRes) ProtoMessage() {}

func (x *ImportRes) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRes.ProtoReflect.Descriptor instead.
func (*ImportRes) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{7}
}

func (x *ImportRes) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type BalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenID         uint32   `protobuf:"varint,1,opt,name=tokenID,proto3" json:"tokenID,omitempty"`
	NetworkKey      string   `protobuf:"bytes,2,opt,name=networkKey,proto3" json:"networkKey,omitempty"`
	ContractAddress string   `protobuf:"bytes,3,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Address         []string `protobuf:"bytes,4,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *BalanceReq) Reset() {
	*x = BalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceReq) ProtoMessage() {}

func (x *BalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceReq.ProtoReflect.Descriptor instead.
func (*BalanceReq) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{8}
}

func (x *BalanceReq) GetTokenID() uint32 {
	if x != nil {
		return x.TokenID
	}
	return 0
}

func (x *BalanceReq) GetNetworkKey() string {
	if x != nil {
		return x.NetworkKey
	}
	return ""
}

func (x *BalanceReq) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *BalanceReq) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type BalanceResItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceResItem) Reset() {
	*x = BalanceResItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResItem) ProtoMessage() {}

func (x *BalanceResItem) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResItem.ProtoReflect.Descriptor instead.
func (*BalanceResItem) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{9}
}

func (x *BalanceResItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BalanceResItem) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type BalanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*BalanceResItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *BalanceRes) Reset() {
	*x = BalanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRes) ProtoMessage() {}

func (x *BalanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRes.ProtoReflect.Descriptor instead.
func (*BalanceRes) Descriptor() ([]byte, []int) {
	return file_blockchain_proto_rawDescGZIP(), []int{10}
}

func (x *BalanceRes) GetItem() []*BalanceResItem {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_blockchain_proto protoreflect.FileDescriptor

var file_blockchain_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xd6,
	0x03, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x70, 0x63,
	0x55, 0x52, 0x4c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x52,
	0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x61, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x63, 0x61, 0x6e, 0x55, 0x52, 0x4c, 0x22, 0xe7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x55, 0x53, 0x44,
	0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x55, 0x53, 0x44,
	0x54, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65,
	0x79, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe3, 0x01, 0x0a,
	0x09, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x4f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4f, 0x75, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x5c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0xc1, 0x01, 0x0a, 0x09, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3a, 0x0a, 0x09, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x44, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x0a, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x2a, 0x17, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x72, 0x6f, 0x6e, 0x10, 0x00, 0x2a,
	0x15, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x78, 0x10, 0x00, 0x2a, 0x26, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x10, 0x01, 0x32, 0x89,
	0x02, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x12, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_proto_rawDescOnce sync.Once
	file_blockchain_proto_rawDescData = file_blockchain_proto_rawDesc
)

func file_blockchain_proto_rawDescGZIP() []byte {
	file_blockchain_proto_rawDescOnce.Do(func() {
		file_blockchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_proto_rawDescData)
	})
	return file_blockchain_proto_rawDescData
}

var file_blockchain_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_blockchain_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_blockchain_proto_goTypes = []any{
	(AccountType)(0),          // 0: blockchain.AccountType
	(APIEnum)(0),              // 1: blockchain.APIEnum
	(AddressType)(0),          // 2: blockchain.AddressType
	(*BlockchainNetwork)(nil), // 3: blockchain.BlockchainNetwork
	(*GenAddressReq)(nil),     // 4: blockchain.GenAddressReq
	(*GenAddressRes)(nil),     // 5: blockchain.GenAddressRes
	(*SendToReq)(nil),         // 6: blockchain.SendToReq
	(*SendToRes)(nil),         // 7: blockchain.SendToRes
	(*Address)(nil),           // 8: blockchain.Address
	(*ImportReq)(nil),         // 9: blockchain.ImportReq
	(*ImportRes)(nil),         // 10: blockchain.ImportRes
	(*BalanceReq)(nil),        // 11: blockchain.BalanceReq
	(*BalanceResItem)(nil),    // 12: blockchain.BalanceResItem
	(*BalanceRes)(nil),        // 13: blockchain.BalanceRes
}
var file_blockchain_proto_depIdxs = []int32{
	0,  // 0: blockchain.BlockchainNetwork.accountKey:type_name -> blockchain.AccountType
	0,  // 1: blockchain.GenAddressReq.accountType:type_name -> blockchain.AccountType
	2,  // 2: blockchain.GenAddressReq.addressType:type_name -> blockchain.AddressType
	0,  // 3: blockchain.Address.type:type_name -> blockchain.AccountType
	0,  // 4: blockchain.ImportReq.accountType:type_name -> blockchain.AccountType
	8,  // 5: blockchain.ImportReq.EncryptedBy:type_name -> blockchain.Address
	8,  // 6: blockchain.ImportRes.address:type_name -> blockchain.Address
	12, // 7: blockchain.BalanceRes.item:type_name -> blockchain.BalanceResItem
	4,  // 8: blockchain.BlockchainServer.GenAddress:input_type -> blockchain.GenAddressReq
	6,  // 9: blockchain.BlockchainServer.SendTo:input_type -> blockchain.SendToReq
	9,  // 10: blockchain.BlockchainServer.Import:input_type -> blockchain.ImportReq
	11, // 11: blockchain.BlockchainServer.Balance:input_type -> blockchain.BalanceReq
	5,  // 12: blockchain.BlockchainServer.GenAddress:output_type -> blockchain.GenAddressRes
	7,  // 13: blockchain.BlockchainServer.SendTo:output_type -> blockchain.SendToRes
	10, // 14: blockchain.BlockchainServer.Import:output_type -> blockchain.ImportRes
	13, // 15: blockchain.BlockchainServer.Balance:output_type -> blockchain.BalanceRes
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_blockchain_proto_init() }
func file_blockchain_proto_init() {
	if File_blockchain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockchain_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BlockchainNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GenAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GenAddressRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SendToReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SendToRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ImportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ImportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BalanceResItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BalanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockchain_proto_goTypes,
		DependencyIndexes: file_blockchain_proto_depIdxs,
		EnumInfos:         file_blockchain_proto_enumTypes,
		MessageInfos:      file_blockchain_proto_msgTypes,
	}.Build()
	File_blockchain_proto = out.File
	file_blockchain_proto_rawDesc = nil
	file_blockchain_proto_goTypes = nil
	file_blockchain_proto_depIdxs = nil
}
